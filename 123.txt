import { Builder, WebDriver, Capabilities, By } from 'selenium-webdriver';

interface IAssert {
  equal: (actual: Object, expected: Object) => void;
}

require('chromedriver');
const assert: IAssert = require('assert');

let capabilities = Capabilities.chrome();

capabilities.set('goog:chromeOptions', {
  args: [
    '--lang=en',
    'disable-infobars',
    '--disable-plugins',
    //'--headless' // <- use GUI or only console
  ]
});

xdescribe('BAD - Authorization', function () {
  let driver: WebDriver;

  before(async function () {
    driver = await new Builder().withCapabilities(capabilities).build();
  });

  xit('Login with incorrect data', async function () {
    await driver.get('https://lab2.webtm.ru');
    driver.findElement(By.css('ng-model="ctrl.email"]')).sendKeys('W@W.w');
    driver.findElement(By.css('[ng-model="ctrl.password"]')).sendKeys('1111111');
    (await driver.findElement(By.css('[type="button"]'))).click()
    await driver.sleep(3000);
    let authorizationPasswordInput = driver.findElement(By.css('[ng-model="ctrl.password"]'));
    let exitAuthorizationPasswordInput = authorizationPasswordInput.then(() => true, () => false);
    await assert.equal(await exitAuthorizationPasswordInput, true);
  });

  it('Login with correct data', async function () {
    await driver.get('http://lab2.webtm.ru');
    driver.findElement(By.css('[ng-model="ctrl.email"]')).sendKeys('w@w.w');
    driver.findElement(By.css('[ng-model="ctrl.password"]')).sendKeys('w');
    (await driver.findElement(By.css('[type="button"]'))).click()
    await driver.sleep(1000);

    (await driver.findElement(By.css('[type="button ADDING"]'))).click()
    driver.findElement(By.css('[ng-model="ctrl.unit.fam"]')).sendKeys('lagadze');
    driver.findElement(By.css('[ng-model="ctrl.unit.name"]')).sendKeys('Beka');
    driver.findElement(By.css('["ng-model="ctrl.unit.hour""]')).sendKeys('13:00');
    (await driver.findElement(By.css('[type="button add"]'))).click() 
    await driver.sleep(1000);


    let authorizationPasswordInput = driver.findElement(By.css('[ng-model="ctrl.password"]'));
    let exitAuthorizationPasswordInput = authorizationPasswordInput.then(() => true, () => false);
    await assert.equal(await exitAuthorizationPasswordInput, true);
  });

  after(() => driver && driver.quit());
});
